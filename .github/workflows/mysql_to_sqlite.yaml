name: SQL to SQLite

on:
  push:
     paths:
      - .github/workflows/**
      - dev_files/e3dcatalog_current_database.sql

jobs:

  update-release:
  
    name: Create new plugin release upon update of catalog
    
    runs-on: ubuntu-latest
    
    steps:
    
      - uses: actions/checkout@v2
      
      - name: Install Linux libraries
        run: |
          sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable
          sudo apt-get update
          sudo apt-get install --yes libudunits2-dev libgdal-dev libgeos-dev libproj-dev gdal-bin libspatialindex-dev
          
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: 'x64'
      
      - name: Install Python packages
        run: |
          pip install wheel
          pip install GDAL==`gdal-config --version`
          pip install pb_tool
      
      - name: SQL setup
        run: |
          sudo systemctl start mysql.service
          mysql -u root -proot < ./dev_files/e3dcatalog_current_database.sql
          
      - name: Convert MySQL to SQLite
        run: |
          python ./dev_files/mysql_to_sqlite.py
      
      - uses: EndBug/add-and-commit@v7
        with:
          add: 'db_catalog'
          author_name: github-actions
          author_email: github-actions@github.com
          message: "current catalog update"

      - name: Update version
        run: |
          python ./dev_files/update_version.py

      - uses: EndBug/add-and-commit@v7
        with:
          add: 'metadata.txt'
          author_name: github-actions
          author_email: github-actions@github.com
          message: "version update"

      - name: Zip plugin
        run: |
          pb_tool zip

      - name: Get Version
        id: version
        run: |
          echo "::set-output name=VERSION::$(cat metadata.txt | grep '^version' | grep -o '[0-9\.]*')"

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          files: zip_build/Erosion3DDataPreparationPlugin.zip
          name: ver. ${{ steps.version.outputs.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}